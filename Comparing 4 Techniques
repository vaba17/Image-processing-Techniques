function varargout = hog_removal(varargin)
% HOG_REMOVAL M-file for hog_removal.fig
%      HOG_REMOVAL, by itself, creates a new HOG_REMOVAL or raises the existing
%      singleton*.
%
%      H = HOG_REMOVAL returns the handle to a new HOG_REMOVAL or the handle to
%      the existing singleton*.
%
%      HOG_REMOVAL('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in HOG_REMOVAL.M with the given input arguments.
%
%      HOG_REMOVAL('Property','Value',...) creates a new HOG_REMOVAL or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before hog_removal_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to hog_removal_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help hog_removal

% Last Modified by GUIDE v2.5 01-Dec-2016 17:40:54

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @hog_removal_OpeningFcn, ...
                   'gui_OutputFcn',  @hog_removal_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before hog_removal is made visible.
function hog_removal_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to hog_removal (see VARARGIN)

% Choose default command line output for hog_removal
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes hog_removal wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = hog_removal_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in clahe_met.
function clahe_met_Callback(hObject, eventdata, handles)
% hObject    handle to clahe_met (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
A=imread('claheout.jpg');
axes(handles.axes1);
imshow(A);
title('CLAHE OUTPUT IMAGE')

% --- Executes on button press in mixclahe_met.
function mixclahe_met_Callback(hObject, eventdata, handles)
% hObject    handle to mixclahe_met (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
B=imread('mixclaheout.jpg');
axes(handles.axes2);
imshow(B);
title('MIX-CLAHE OUTPUT IMAGE')

% --- Executes on button press in bi_lateral_met.
function bi_lateral_met_Callback(hObject, eventdata, handles)
% hObject    handle to bi_lateral_met (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
C=imread('blaterout.jpg');
axes(handles.axes3);
imshow(C);
title('BILATERAL OUTPUT IMAGE')

% --- Executes on button press in tri_lateral_met.
function tri_lateral_met_Callback(hObject, eventdata, handles)
% hObject    handle to tri_lateral_met (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
D=imread('trilaterout.jpg');
axes(handles.axes4);
imshow(D);
title('TRILATERAL OUTPUT IMAGE')
